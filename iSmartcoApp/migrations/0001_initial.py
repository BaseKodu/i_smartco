# Generated by Django 4.0.3 on 2022-03-30 10:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('user_type', models.CharField(choices=[('sysAdmin', '1'), ('CompAdmin', '2'), ('Client', '3'), ('Employee', '4')], default='CompAdmin', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.EmailField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_id_num', models.CharField(max_length=13, unique=True)),
                ('employee_name', models.CharField(blank=True, max_length=50, null=True)),
                ('employee_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('employee_address', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_designation', models.CharField(blank=True, max_length=50, null=True)),
                ('employee_joining_date', models.DateField(blank=True, null=True)),
                ('employee_leaving_date', models.DateField(blank=True, null=True)),
                ('employee_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='iSmartcoApp.company')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=100)),
                ('country', models.CharField(blank=True, default='South Africa', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('belongs_to', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='user_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='iSmartcoApp.company'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='JobCard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('job_card_number', models.CharField(blank=True, max_length=100, null=True)),
                ('job_card_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('job_card_location', models.CharField(blank=True, max_length=100, null=True)),
                ('job_card_created_at', models.DateTimeField(auto_now_add=True)),
                ('job_card_started_at', models.DateTimeField(blank=True, null=True)),
                ('job_card_completed_at', models.DateTimeField(blank=True, null=True)),
                ('job_card_type', models.CharField(blank=True, max_length=100, null=True)),
                ('job_card_status', models.CharField(blank=True, max_length=100, null=True)),
                ('job_card_description', models.TextField(blank=True, null=True)),
                ('job_card_priority', models.CharField(blank=True, default='Normal', max_length=100, null=True)),
                ('job_card_resolution', models.TextField(blank=True, null=True)),
                ('job_card_completion_description', models.CharField(blank=True, max_length=100, null=True)),
                ('job_card_nva_time', models.TimeField(blank=True, null=True)),
                ('job_card_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='iSmartcoApp.company')),
                ('job_card_requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job_card_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='iSmartcoApp.client')),
                ('job_card_technicians', models.ManyToManyField(blank=True, to='iSmartcoApp.employee')),
            ],
        ),
    ]
